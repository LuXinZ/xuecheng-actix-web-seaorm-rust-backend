//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "course_publish")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i64,
    pub company_id: i64,
    pub company_name: Option<String>,
    pub name: String,
    pub users: String,
    pub tags: Option<String>,
    pub username: Option<String>,
    pub mt: String,
    pub mt_name: String,
    pub st: String,
    pub st_name: String,
    pub grade: String,
    pub teachmode: String,
    pub pic: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub market: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub teachplan: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub teachers: Option<String>,
    pub create_date: Option<DateTime>,
    pub online_date: Option<DateTime>,
    pub offline_date: Option<DateTime>,
    pub status: Option<String>,
    pub remark: Option<String>,
    pub charge: Option<String>,
    #[sea_orm(column_type = "Float", nullable)]
    pub price: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub original_price: Option<f32>,
    pub valid_days: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
