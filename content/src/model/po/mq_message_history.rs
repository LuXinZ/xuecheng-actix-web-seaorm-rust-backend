//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "mq_message_history")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i64,
    pub message_type: String,
    pub business_key1: Option<String>,
    pub business_key2: Option<String>,
    pub business_key3: Option<String>,
    pub execute_num: Option<u32>,
    pub state: Option<u32>,
    pub returnfailure_date: Option<DateTime>,
    pub returnsuccess_date: Option<DateTime>,
    pub returnfailure_msg: Option<String>,
    pub execute_date: Option<DateTime>,
    pub stage_state1: Option<String>,
    pub stage_state2: Option<String>,
    pub stage_state3: Option<String>,
    pub stage_state4: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
